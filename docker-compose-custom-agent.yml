version: '2'

services:

  postgres:
    build: ./postgres
    volumes:
      - "/opt/teamcity/pg_data:/var/lib/postgresql/data"
      - "/opt/teamcity/pg_backup:/backups"
    env_file: .env
    restart: always

  server:
    image: jetbrains/teamcity-server:latest
    volumes:
      - "/opt/teamcity/data:/data/teamcity_server/datadir"
      - "/opt/teamcity/logs:/opt/teamcity/logs"
    ports:
      - 8111:8111
    depends_on:
      - postgres
    env_file: .env
    restart: always

  agent:
    build: ./agents/django-nodejs
    env_file: .env
    restart: always
    # if you need docker inside the agent (http://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  nginx:
    image: nginx
    links:
      - teamcity-server
    volumes:
      - "./server/tc.conf:/etc/nginx/conf.d/default.conf"
    environment:
      # set your domain name and email!
      VIRTUAL_HOST: ci.example.com
      LETSENCRYPT_HOST: ci.example.com
      LETSENCRYPT_EMAIL: username@example.ru

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/html:/usr/share/nginx/html"
      - "./nginx/certs:/etc/nginx/certs"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./server/proxy.conf:/etc/nginx/conf.d/proxy.conf"

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"