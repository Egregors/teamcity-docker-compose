version: '3'

services:
  server:
    image: jetbrains/teamcity-server:latest
    networks:
      - web
      - default
    volumes:
      - "/tmp/teamcity/data:/data/teamcity_server/datadir"
      - "/tmp/teamcity/logs:/opt/teamcity/logs"

    #    hostname: ${VIRTUAL_HOST}
    #    volumes:
    #      - "/opt/teamcity/data:/data/teamcity_server/datadir"
    #      - "/opt/teamcity/logs:/opt/teamcity/logs"
    ports:
      - "8111"
#    expose:
#      - "8111"
    depends_on:
      - postgres
    env_file: .env
    labels:
      - "traefik.enable=true"
      - "traefik.backend=server"
      - "traefik.frontend.rule=Host:localhost"
      - "traefik.docker.network=web"
      - "traefik.port=8111"

  agent:
    image: jetbrains/teamcity-minimal-agent
    env_file: .env

#  teamcity_agent:
#    build: ./agents/python-node-yarn
#    env_file: .env
#    networks:
#      - internal
#    depends_on:
#      - redis
    # if you need docker inside the agent
    # (http://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/)
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    labels:
#      - "traefik.enable=false"

  postgres:
    build: ./postgres
    volumes:
      #      - "/opt/teamcity/pg_data:/var/lib/postgresql/data"
      #      - "/opt/teamcity/pg_backup:/backups"
      - "/tmp/teamcity/pg_data:/var/lib/postgresql/data"
      - "/tmp/teamcity/pg_backup:/backups"
    env_file: .env
    restart: always
    labels:
      - "traefik.enable=false"
#
#  redis:
#    image: redis:3.2
#    networks:
#      - internal
#    labels:
#      - "traefik.enable=false"

  traefik:
    image: traefik
    restart: always
    command: --api --docker --logLevel=INFO
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  web:
    external: true
